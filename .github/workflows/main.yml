name: deploy-gcwm-report-gen-lambda

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v3

      # 1) Disable Azure mirror entirely and add official Ubuntu archive for amd64
      - name: Use official Ubuntu archive for amd64
        run: |
          # disable any ubuntu.sources (Azure) entries
          sudo mv /etc/apt/sources.list.d/ubuntu.sources /etc/apt/sources.list.d/ubuntu.sources.disabled || true
          # comment out any remaining Azure lines
          sudo sed -i.bak -E 's|^(deb .*azure\.archive\.ubuntu\.com/ubuntu.*)|# \1|' \
            /etc/apt/sources.list \
            /etc/apt/sources.list.d/*.list || true

          # add official Ubuntu archive for amd64
          sudo tee /etc/apt/sources.list.d/ubuntu-archive-amd64.list <<EOF
          deb http://archive.ubuntu.com/ubuntu noble main universe restricted multiverse
          deb http://archive.ubuntu.com/ubuntu noble-updates main universe restricted multiverse
          deb http://archive.ubuntu.com/ubuntu noble-backports main universe restricted multiverse
          deb http://archive.ubuntu.com/ubuntu noble-security main universe restricted multiverse
          EOF

      # 2) Enable arm64 + add Ubuntu Ports for arm64 + install cross-OpenSSL dev
      - name: Prepare AArch64 OpenSSL & toolchain
        run: |
          sudo dpkg --add-architecture arm64

          sudo tee /etc/apt/sources.list.d/arm64-ports.list <<EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble main universe restricted multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-updates main universe restricted multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-security main universe restricted multiverse
          EOF

          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            libc6-dev:arm64 \
            libssl-dev:arm64 \
            pkg-config-aarch64-linux-gnu
        env:
          PKG_CONFIG_ALLOW_CROSS: "1"
          PKG_CONFIG_SYSROOT_DIR: "/usr/aarch64-linux-gnu"
          PKG_CONFIG_PATH: "/usr/aarch64-linux-gnu/lib/pkgconfig"

      # 3) Build & deploy to Lambda
      - name: Deploy code to Lambda
        uses: qxf2/rust-lambda-action@v1.0.1
        with:
          lambda_directory: '.'
          iam_role: ${{ secrets.AWS_IAM_ROLE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}


