# .github/workflows/build-and-deploy-lambda.yml
name: Build & Deploy Lambda (ARM64 + Vendored OpenSSL)

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04
    outputs:
      artifact-name: lambda-arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install cross-compile toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu build-essential pkg-config

      - name: Add ARM64 Rust target
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Install cargo-lambda
        run: |
          python3 -m pip install --upgrade pip
          pip install cargo-lambda

      - name: Configure Cargo linker
        run: |
          mkdir -p .cargo
          cat <<EOF > .cargo/config.toml
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          EOF

      - name: Build Lambda with vendored OpenSSL
        run: cargo lambda build --release --arm64
        env:
          OPENSSL_STATIC: true

      - name: Upload Lambda artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-arm64
          path: target/aarch64-unknown-linux-gnu/release/bootstrap

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Lambda artifact
        uses: actions/download-artifact@v4
        with:
          name: lambda-arm64

      - name: Deploy code to Lambda
        uses: qxf2/rust-lambda-action@v1.0.1
        with:
          lambda_directory: '.'                  
          iam_role: ${{ secrets.AWS_IAM_ROLE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}





