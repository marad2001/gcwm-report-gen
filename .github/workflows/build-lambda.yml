# .github/workflows/build-and-deploy-lambda.yml
name: Build & Deploy Lambda (ARM64 + Vendored OpenSSL)

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-24.04

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install system dependencies & Rust target
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            build-essential \
            pkg-config
          rustup target add aarch64-unknown-linux-gnu

      - name: Install cargo-lambda
        run: |
          python3 -m pip install --upgrade pip
          pip install cargo-lambda

      - name: Configure Cargo linker for ARM64
        run: |
          mkdir -p .cargo
          cat <<EOF > .cargo/config.toml
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          EOF

      - name: Build Lambda with vendored OpenSSL
        env:
          OPENSSL_STATIC: true
        run: cargo lambda build --release --arm64

      - name: Deploy to AWS Lambda
        uses: qxf2/rust-lambda-action@v1.0.1
        with:
          # point at the directory containing `bootstrap`
          lambda_directory: "."                        # <-- point at your project root
          profile: release                           # <-- cargo profile
          target: aarch64-unknown-linux-gnu          # <-- Rust target
          iam_role: ${{ secrets.AWS_IAM_ROLE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        env:
          OPENSSL_STATIC: true  







